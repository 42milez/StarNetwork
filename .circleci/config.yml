version: 2
jobs:
  build:
    docker:
      - image: 42milez/cpp-dev-base:latest
    working_directory: /var/app
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Branch }}-{{ .Environment.CacheUUID }}
      - run:
          name: "Create Build Directory"
          command: |
            mkdir -p ./$BUILD_DIR
            mkdir -p ./$BUILD_DIR_ASAN
            mkdir -p ./$BUILD_DIR_LSAN
            mkdir -p ./$BUILD_DIR_MSAN
            mkdir -p ./$BUILD_DIR_TSAN
      - run:
          name: "Build All"
          command: /bin/bash ./docker/script/build/build_all.bash
          environment:
            BUILD_DIR: $BUILD_DIR
      - run:
          name: "Build All with Address Sanitizer"
          command: /bin/bash ./docker/script/build/build_all.bash
          environment:
            BUILD_DIR: $BUILD_DIR_ASAN
      - run:
          name: "Build All with Leak Sanitizer"
          command: /bin/bash ./docker/script/build/build_all.bash
          environment:
            BUILD_DIR: $BUILD_DIR_LSAN
      - run:
          name: "Build All with Memory Sanitizer"
          command: /bin/bash ./docker/script/build/build_all.bash
          environment:
            BUILD_DIR: $BUILD_DIR_MSAN
      - run:
          name: "Build All with Thread Sanitizer"
          command: /bin/bash ./docker/script/build/build_all.bash
          environment:
            BUILD_DIR: $BUILD_DIR_TSAN
      - save_cache:
          key: build-{{ .Branch }}-{{ .Environment.CacheUUID }}-{{ checksum "./cmake-build-test/CMakeCache.txt" }}
          paths:
            - /root/.conan
            - ./$BUILD_DIR
            - ./$BUILD_DIR_ASAN
            - ./$BUILD_DIR_LSAN
            - ./$BUILD_DIR_MSAN
            - ./$BUILD_DIR_TSAN
  test_base: &test_base
    docker:
      - image: 42milez/cpp-dev-base:latest
    working_directory: /var/app
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Branch }}-{{ .Environment.CacheUUID }}
      - run:
          name: "Create Test Results Directory"
          command: |
            mkdir ./test-results
      - run:
          name: "Enable JUnit Reporter"
          command: echo "export CATCH_REPORTER=junit" >> $BASH_ENV
      - run:
          name: "Run All Test"
          command: /bin/bash ./docker/script/test/run_all_tests.bash
      - store_test_results:
          path: /var/app/test-results
  test:
    <<: *test_base
    environment:
      BUILD_DIR: $BUILD_DIR
  test_asan:
    <<: *test_base
    environment:
      BUILD_DIR: $BUILD_DIR_ASAN
  test_lsan:
    <<: *test_base
    environment:
      BUILD_DIR: $BUILD_DIR_LSAN
  test_msan:
    <<: *test_base
    environment:
      BUILD_DIR: $BUILD_DIR_MSAN
  test_tsan:
    <<: *test_base
    environment:
      BUILD_DIR: $BUILD_DIR_TSAN
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - test_asan:
          requires:
            - build
            - test
      - test_lsan:
          requires:
            - build
            - test
      - test_msan:
          requires:
            - build
            - test
      - test_tsan:
          requires:
            - build
            - test
